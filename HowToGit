Manual de referencia rápida uso de GIT. 

Configuración de git
 working directory -> XXXX -> git 
 
  Configuración global de GIT
      Configuración inicial.
          
            $ git config --global user.name "<nombre de usuario>"
            $ git config -- global user.mail "<mail de usuario>"
  
  Crear un repositorio de git:
  
      $ git init <Nombre del proyecto>
  
  Obtener un repositorio ya existente en Git
      
      $ git clone <repositorio > [directorio local]
      
  Revisar cambios de los archivos del directorio de trabajo.
  
      $ git status
  
  Mostrar todas las configuraciones del historial de la rama actual 
      
      $ git log
      
  Comparar cambios entre la versión del archivo del directorio de trabajo y la última configuración. 
  
      $ git diff <archvios>
  
  Mostrar cambios entre la versión del archivo del directorio de trabajo y una confirmación particular del historial de archivos.
      
      $ git diff <commit id> <file path> 
  
  Mostrar cambios entre las dos confirmaciones de un historial de archivos <file path> ruta del archivo y <commit id > que es la 
 identificacion de la version del archivo a comparar. 
  
      $ git diff <commit id 1> <commit id 2> <file path>
  
  Mostrar los cambios entre dos archivos enel directorio de trabajo o en el disco.
    
      $ git diff <file path 1> <file path 2>

  Descartar cambios en el directorio de trabajo.
      
      $git restore <file>


AGREGAR ARCHIVOS DEL GIT

  Agregar archivos al área de preparación
      
      $ git add
      
  Para agregar solo un archivo al área de preparación
  
      $ git add <archivo>
  
  Agregar todos los archivos modificados al area de preparación
      
      $ git add . 
      
  Confirmar el archivo 
  
      $ git commit -m "Comentarios del los cambios realizados"
ELIMINAR ARCHIVOS DE GIT

      $ git rm <archivo1>
  
  Para eliminar archivo del area de preparación sin quitar los archivos del directorio de trabajo 
  
      $ git rm --cache <archivo1> ...

  
RAMAS Y FUSIONES

   Crear una nueva rama
    
      $ git branch <nombrerama>
      
   Verificar la rama actual en uso. 
    
      $ git branch
   
   Cambiar de rama
   
      $ git checkout <nuevarama>
      
   Combinar contenido entre rama1 y rama maestra
   
      $ git merge <nuevaRama>
   
   Eliminar una Rama
      
      $ git branch -d <nuevarama>
   
   Subir una rama a git
      
      $ git push -u <nuevarama>
   
   Mostrar todas las branch locales y remotas
   
      $ git branch -a
      
  Unir una rama al master 
      hay que volver a la branch master (checkout)
      verificar que tengamos la ultima versiøn $ git pull origin master
      revisar las ramas (brach) antes unidas.
          $ git branch --merged 
      
      Unir la nueva rama
       
          $ git merge <nuevarama>
          
      ahora hay que subir a git. (git push origin master) 
      
    
   
 INTEGRACION CON GITHUB

   Agregar URL a Git
      $ git remote add origin <URL>
      
   Verificacion 
      $ git remote --verbose
   
   Clonar un repositorio 
      $ git clone url
   
   subir archivos
      gip push original master
   
   ultima version 
      git pull origin master


      
    
